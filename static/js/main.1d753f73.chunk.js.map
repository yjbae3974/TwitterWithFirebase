{"version":3,"sources":["fbInstance.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","seterror","useState","email","setemail","password","setpassword","newAccount","setnewAccount","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","error","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","isEditing","setisEditing","tweet","newTweet","setnewTweet","fileUrl","attachmentUrl","onDeleteClick","window","confirm","doc","id","delete","refFromURL","onEditClick","update","autoFocus","text","src","alt","faTrash","faPencilAlt","TweetFactory","userObj","settweet","file","setfile","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","uptweet","createdAt","Date","now","creator","collection","add","action","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","faTimes","Home","props","tweets","settweets","useEffect","onSnapshot","snp","nweetArray","docs","map","marginTop","nweet","i","navigation","refreshUser","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","history","useHistory","setdisplayName","currentUser","photoURL","getMyTweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setinit","setIsLoggedIn","setuserObj","onAuthStateChanged","user","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d753f73.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React,{useState} from \"react\";\r\nimport { authService } from \"fbInstance\";\r\nexport default function AuthForm({seterror}) {\r\n    \r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [newAccount, setnewAccount] = useState(true);\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n          setemail(value);\r\n        } else if (name === \"password\") {\r\n          setpassword(value);\r\n          console.log(value);\r\n        }\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault(); //기본 일들이 실행되지 않고 내가 원하는 일들이 실행되게끔..\r\n        try {\r\n          let data;\r\n          if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(\r\n              email,\r\n              password\r\n            );\r\n          } else {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n          }\r\n          console.log(data);\r\n        } catch (error) {\r\n          seterror(error.message);\r\n        }\r\n      };\r\n      const toggleAccount = () => {\r\n        return setnewAccount((prev) => !prev);\r\n      };\r\n  return (\r\n      <>\r\n    <form onSubmit={onSubmit} className=\"container\">\r\n      <input\r\n        onChange={onChange}\r\n        name=\"email\"\r\n        type=\"email\"\r\n        placeholder=\"email\"\r\n        required\r\n        value={email}\r\n        className=\"authInput\"\r\n      />\r\n      <input\r\n        onChange={onChange}\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        required\r\n        value={password}\r\n        className=\"authInput\"\r\n      />\r\n      <input\r\n        onChange={onChange}\r\n        type=\"submit\"\r\n        className=\"authInput authSubmit\"\r\n        value={newAccount ? \"sign in\" : \"log in\"}\r\n      />\r\n    </form>\r\n    <span onClick={toggleAccount} className=\"authSwitch\">\r\n    {newAccount ? \"log in\" : \"create account\"}\r\n  </span>\r\n  </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbInstance\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nexport default function Auth() {\r\n  const [error, seterror] = useState(\"\");\r\n  \r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if(name ==='google'){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if (name === 'github'){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm seterror={seterror}/>\r\n      \r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\"  className=\"authBtn\">\r\n          Continue with Google  <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github  <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n      <div className=\"authError\">{error}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbInstance\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Tweet({ tweetObj, isOwner }) {\r\n  const [isEditing, setisEditing] = useState(false);\r\n  const [newTweet, setnewTweet] = useState(tweetObj.tweet);\r\n  const fileUrl = tweetObj.attachmentUrl;\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are You Sure you want to delete this tweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(fileUrl).delete();\r\n    }\r\n  };\r\n  const onEditClick = () => {\r\n    setisEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(newTweet);\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      tweet: newTweet,\r\n    });\r\n    setisEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setnewTweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {isEditing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={onChange}\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"edit\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={onEditClick} className=\"formBtn cancelBtn\">\r\n            cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && (\r\n            <img src={tweetObj.attachmentUrl} alt=\"\" />\r\n          )}\r\n          {isOwner ? (\r\n            <div className=\"nweet__actions\">\r\n              <button onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n              <button onClick={onEditClick}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\nimport { storageService, dbService } from \"fbInstance\";\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function TweetFactory({ userObj }) {\r\n    const [tweet, settweet] = useState(\"\");\r\n    const [file, setfile] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let fileUrl = \"\";\r\n    console.log(file);\r\n    if (file != \"\") {\r\n      const fileRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(file, \"data_url\");\r\n      fileUrl = await response.ref.getDownloadURL();\r\n    }\r\n    console.log(fileUrl);\r\n    const uptweet = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creator: userObj.uid,\r\n      attachmentUrl: fileUrl,\r\n    };\r\n    await dbService.collection(\"tweets\").add(uptweet);\r\n    settweet(\"\");\r\n    setfile(\"\");\r\n    // await dbService.collection(\"tweets\").add({\r\n    //   tweet,\r\n    //   createdAt: Date.now(),\r\n    //   creator: props.userObj.uid,\r\n    // });\r\n    // settweet(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    settweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event; //event안에서 target안으로 가서 files객체를 받아오는 것을 의미함.\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      console.log(finishedEvent.target.result);\r\n      const {\r\n        target: { result },\r\n      } = finishedEvent;\r\n      setfile(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const clearPhoto = () => {\r\n    setfile(\"\");\r\n  };\r\n  return (\r\n    <form action=\"\" onSubmit={onSubmit} className=\"factoryForm\">\r\n      <input\r\n      className=\"factoryInput__input\"\r\n        value={tweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input type=\"file\"  id=\"attach-file\" className=\"factoryInput__label\" accept=\"image/*\" onChange={onFileChange} style={{\r\n          opacity: 0,\r\n        }} />\r\n      <input type=\"submit\" value=\"tweet\" className=\"factoryInput__arrow\" />\r\n      {file && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img src={file} alt=\"\" />\r\n            \r\n            <div className=\"factoryForm__clear\" onClick={clearPhoto}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService,storageService } from \"fbInstance\";\r\nimport Tweet from \"components/Tweet\";\r\n\r\nimport TweetFactory from \"components/TweetFactory\";\r\nexport default function Home(props) {\r\n\r\n  const [tweets, settweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"tweets\").onSnapshot((snp) => {\r\n      const nweetArray = snp.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      settweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={props.userObj}/>\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((nweet, i) => {\r\n          \r\n          return (\r\n            <>\r\n              <Tweet\r\n                key={nweet.id}\r\n                tweetObj={nweet}\r\n                isOwner={nweet.creator === props.userObj.uid}\r\n              ></Tweet>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function navigation({ refreshUser, userObj }) {\r\n  console.log(userObj);\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/Profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n               <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{marginTop: 10}}>\r\n                {userObj.displayName}의 Profile\r\n            </span>\r\n          </Link>\r\n        </li>\r\n       \r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authService, dbService, storageService } from \"fbInstance\";\r\nimport { useHistory } from \"react-router\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nexport default function Profile({ refreshUser, userObj }) {\r\n  const history = useHistory();\r\n  const [displayName, setdisplayName] = useState(userObj.displayName);\r\n  const [file, setfile] = useState(authService.currentUser.photoURL);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyTweets = async () => {\r\n    const tweets = await dbService\r\n      .collection(\"tweets\")\r\n      .where(\"creator\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(tweets.docs.map((doc) => doc.data()));\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setdisplayName(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(theFile);\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        target: { result },\r\n      } = finishedEvent;\r\n      setfile(result);\r\n    };\r\n  };\r\n  const clearPhoto = () => {\r\n    setfile(\"\");\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let fileUrl = \"\";\r\n    if (userObj.displayName !== displayName) {\r\n      await userObj.updateProfile({\r\n        displayName: displayName,\r\n      });\r\n\r\n      refreshUser();\r\n    }\r\n    if (file !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(file, \"data_url\");\r\n      fileUrl = await response.ref.getDownloadURL();\r\n      await userObj.updateProfile({\r\n        photoURL: fileUrl,\r\n      });\r\n\r\n      refreshUser();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getMyTweets();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <form action=\"\" onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={displayName}\r\n          className=\"formInput\"\r\n        />\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add Photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input id=\"attach-file\" type=\"file\" style={{opacity: 0}} accept=\"image/*\" onChange={onFileChange} className=\"factoryInput__label\" />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <img src={file} alt=\"\" />\r\n      <button onClick={clearPhoto}>Clear</button>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log out</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nexport default function AppRouter(props) {\r\n  return (\r\n    <Router>\r\n      {props.isLoggedIn && (\r\n        <Navigation refreshUser={props.refreshUser} userObj={props.userObj} />\r\n      )}\r\n      <Switch>\r\n        {props.isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={props.userObj}></Home>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile\r\n                refreshUser={props.refreshUser}\r\n                userObj={props.userObj}\r\n              ></Profile>\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth></Auth>\r\n            </Route>\r\n          </>\r\n        )}\r\n        ;\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n//<Redirect from=\"*\" to=\"/\" />이걸 위 아래에다가 넣어도 됨.\r\n","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbInstance\";\n\nfunction App() {\n  const [init, setinit] = useState(false)\n  console.log(authService.currentUser)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userObj, setuserObj] = useState(null)\n  useEffect(() => {\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setuserObj({\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        setIsLoggedIn(false);\n      }\n      setinit(true);\n    })\n  }, [])\n  //setInterval(()=>{\n  //  console.log(authService.currentUser)\n  //},2000)\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setuserObj({\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    //이걸 왜 했냐면, 오브젝트의 크기가 너무 커서 리액트가 전이랑 현재랑 다른지를 제대로 판단하지 못함. 그래서 오브젝트 크기를 매우 줄임.\n  }\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn = {isLoggedIn} userObj={userObj}></AppRouter> : 'initializing'}\n    <footer>&copy; BYJ {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {authService} from './fbInstance';\nimport './style.css'\n\nconsole.log(authService);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}